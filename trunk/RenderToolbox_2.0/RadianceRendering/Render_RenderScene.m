function Render_RenderScene(currentConditions)
% Render_RenderScene(currentConditions)
%
% Render the scene based on .rif structs, which were generated by
% Render_MakeWriteRifFiles. These files contain information pointing to the
% other files required by radiance to render the scene.
%
% 12/27/05 dpl wrote it. based on bx's RenRender_rifs
% 1/23/06  dpl changed to use temporary directory

%get some stuff from conditions
currentConditionNumber=currentConditions.currentConditionNumber;
temporaryDirectory=currentConditions.temporaryDirectory;

%temp directory locations
rifDirectoryName=['rifFiles_' int2str(currentConditionNumber)];
rifDirectoryPath=[temporaryDirectory '/' rifDirectoryName];


%check to see if temp directory for radiance output exist
radianceOutDirName=['radOutput_' int2str(currentConditionNumber)];
radianceOutDirPath=[temporaryDirectory '/' radianceOutDirName];
if (~exist(radianceOutDirPath,'dir') )
    mkdir(radianceOutDirPath);
end

sceneName=currentConditions.sceneName;


%set lock file name to see if file processing was finished


numWavelengths=length(currentConditions.wls);
for currentWavelengthNumber=1:numWavelengths
	currentWavelength=currentConditions.wls(currentWavelengthNumber);
	fprintf(['  wavelength ' num2str(currentWavelength) '...  ']);
	%set lock file names for rendering
	lockFileNamePath=[temporaryDirectory '/' sceneName '_' ...
		num2str(currentWavelength) '.loc'];
	finishedFileNamePath=[temporaryDirectory '/' sceneName '_' ...
		num2str(currentWavelength) 'Finished.loc'];
	if ~exist(lockFileNamePath,'file') && ~exist(finishedFileNamePath,'file')
		%no other thread has started or finished this wavelength, so we
		%do it here.
		f=fopen(lockFileNamePath,'w');
		fclose(f);
		%do the rendering
		currentWavelength=int2str(currentConditions.wls(currentWavelengthNumber));
		cmd = ['rad ' rifDirectoryPath '/' sceneName,'_',currentWavelength,'.rif'];
		unix(cmd);
		%move oct and pic files into temp directory
		cmd=['mv ' sceneName '_' num2str(currentWavelength) '.oct ' radianceOutDirPath '/'];
		unix(cmd);
		cmd=['mv ' sceneName '_' num2str(currentWavelength) '_1.pic ' radianceOutDirPath '/'];
		unix(cmd);
		unix(['rm ' lockFileNamePath]);
		f=fopen(finishedFileNamePath,'w');
		fclose(f);
		fprintf('done.\n');
	else
		fprintf('done by another thread.\n');
	end
end
