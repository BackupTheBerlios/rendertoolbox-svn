function Render_WriteRadMaterial_Area(currentLightMaterialParams,dirName)
%Render_Render_WriteRadMaterial_Area(currentLightMaterialParams,dirName)
%
%Take a material structure for a area type  generated earlier in 
%RenderRoom and write it into a .rad file that radiance can read.
%
%12/25/05 dpl wrote it. based on bx's RenStructToMaterial

numWavelengths=length(currentObjectMaterialParams.wavelength);

output = ['void light ',object_name];
output = [output,char(10),'0',char(10),'0',char(10),'3 '];

for currentWavelength=1:numWavelengths; 

   wavelength = int2str(currentLightMaterialParams.wavelength(i));
   spectrum = num2str(currentLightMaterialParams.spectrum(i));
   out_name = [object_name,'_',currentLightMaterialParams.type,'_',wavelength,'.rad'];
   cd(dirName);
   fid = fopen(out_name,'w');

   new_output = [output,spectrum,' ',spectrum,' ',spectrum,char(10)];
   count = fprintf(fid,'%s',new_output);
   fclose(fid);
   cd ..
end





%%1234908us;lkdfjasdpf890uawef

% Get number of wavelengths
numWavelengths=length(currentObjectMaterialParams.wavelength);


rho = num2str(currentObjectMaterialParams.rho);
alpha = num2str(currentObjectMaterialParams.alpha);

output = ['void plastic ',currentObjectMaterialParams.name];
output = [output,char(10),'0',char(10),'0',char(10),'5 '];

for currentWavelength=1:numWavelengths;
    wavelength=num2str(currentObjectMaterialParams.wavelength(currentWavelength));
    spectrum = num2str(currentObjectMaterialParams.spectrum(currentWavelength));
    fileName = [currentObjectMaterialParams.name,'_',currentObjectMaterialParams.type,'_',wavelength,'.rad'];
    cd(dirName);
    fid = fopen(fileName,'w');
    fileOutput = [output,spectrum,' ',spectrum,' ',spectrum,' ',rho,' ',alpha,char(10)];
    count = fprintf(fid,'%s',fileOutput);
    fclose(fid);
    cd('..');
end
